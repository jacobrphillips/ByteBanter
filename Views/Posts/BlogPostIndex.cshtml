@using ByteBanter.Services;
@using ByteBanter.Models;
@using X.PagedList;
@using X.PagedList.Mvc.Core;
@using X.PagedList.Web.Common;

@inject IImageService imageService
@model IPagedList<Post>

@{
    ViewData["Title"] = "Post Index";
}

<div class="container">
    <h1 class="mt-4">Index</h1>
    <div class="row">
        <p>
            <a asp-action="Create">Create New</a>
        </p>
        <table class="table">
            <thead>
                <tr>
                    <th>
                       Image
                    </th>
                    <th>
                        Title
                    </th>
                    <th>
                        Abstract
                    </th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    var dateCreated = item.Created.ToLocalTime();
                    <tr>
                        <td>
                            <img class="img-fluid" width="200px;" src="@imageService.DecodeImage(item.ImageData, item.ContentType)" />
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Title)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Abstract)
                        </td>

                        <td>
                            <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                            <a asp-action="Details" asp-route-slug="@item.Slug">Details</a> |
                            <a asp-action="Delete" asp-route-slug="@item.Slug">Delete</a>
                        </td>
                    </tr>
                }
            </tbody>
        </table>

        <hr />

        <div class="row">
            <div class="col h5">
                Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount
            </div>
        </div>

        <div class="row">
            <div class="col">
                @Html.PagedListPager(Model, page => Url.Action("BlogPostIndex", new { id = Model.FirstOrDefault().BlogId, page = page}),
                new PagedListRenderOptionsBase
                {
                    LiElementClasses = new string[] {"page-item"},
                    PageClasses = new string[] {"page-link"}
                })
            </div>
        </div>

    </div>
</div>
