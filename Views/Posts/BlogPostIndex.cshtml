@using ByteBanter.Enums;
@using ByteBanter.Services;
@using ByteBanter.Models;
@using Microsoft.AspNetCore.Identity;
@using X.PagedList;
@using X.PagedList.Mvc.Core;
@using X.PagedList.Web.Common;

@inject IImageService _imageService
@inject UserManager<BlogUser> _userManager
@model IPagedList<Post>

@{
    ViewData["Title"] = "Post Index";
}

<div class="container">
    <div class="row">
        <!-- Blog post-->
        @foreach (var post in Model)
        {
            //Is the logged in user the Author of this post??
            var isAuthor = false;
            if (User.Identity.IsAuthenticated)
            {
                isAuthor = (post.BlogUserId == _userManager.GetUserId(User));
            }

            <div class="col-md-6 mt-2">
                <div class="card mb-4">
                    <img class="card-img-top"
                         src="@_imageService.DecodeImage(post.ImageData, post.ContentType)" alt="..." style="height: 300px;" />
                    <div class="card-body d-grid gap-1 text-center">
                        <h2 class="card-title h4">Post @post.Title</h2>
                        <p class="card-text">
                            @post.Abstract
                        </p>

                        <a class="btn btn-dark btn-sm mb-2" asp-action="Details" asp-controller="Posts" asp-route-slug="@post.Slug">Read More</a>

                        @if (User.IsInRole(BlogRole.Administrator.ToString()) || isAuthor)
                        {
                            <a class="btn btn-dark" asp-action="Edit" asp-controller="Posts" asp-route-id="@post.Id">Edit Post</a>
                        }
                    </div>
                </div>
            </div>
        }

        <hr />

        <div class="row mt-5">
            <!--Add Paging Controls here-->
            <div class="row">
                <div class="col h5 d-flex justify-content-center align-content-center">
                    Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount
                </div>
            </div>
            <div class="row">
                <div class="col d-flex justify-content-center align-content-center">
                    @Html.PagedListPager(Model, page => Url.Action("Index", new { page = page }),
                    new PagedListRenderOptionsBase
                    {
                    LiElementClasses = new string[] {"page-item"},
                    PageClasses = new string[] {"page-link"}
                    })
                </div>
            </div>
        </div>
    </div>
</div>
